const { formatToMinutes } = require('../helpers/helpers.js');
let { bot, sele, screenshots, allFulfillingTimes } = require('../lib/variables.js');

let hasMinus = false;
let pluses = 0;

let fulfillingTimeIncrement = 0;
let fulfillingTimeElements = [];

const handleStep4 = (callbackQuery) => {
  const chatId = callbackQuery.message.chat.id;
  const end = callbackQuery.data;

  endFulfilling = new Date();
  const formattedDifferenceFulfilling = endFulfilling - endFindingTime;
  const formattedFulfillingTime = formatToMinutes(formattedDifferenceFulfilling);

  allFulfillingTimes.push(formattedFulfillingTime);

  // fulfillingTimeIncrement++;
  // let key = 'fulfilling' + fulfillingTimeIncrement;

  // const fulfillingTimeElement = {
  //   [key]: formattedFulfillingTime
  // };

  // fulfillingTimeElements.push(fulfillingTimeElement);
  // console.log('–í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–æ–≤–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º –æ—Ç—Ä–∞–±–æ—Ç–∫–∏ —Å–¥–µ–ª–∫–∏:', fulfillingTimeElements);

  selections.end = end;
  console.log('–ò—Ç–æ–≥ —Å–¥–µ–ª–∫–∏:', end);
  
  const message = `–í–∞–ª—é—Ç–Ω–∞—è –ø–∞—Ä–∞: *${ selections.currencyPair }*\n–ü–æ–ø—ã—Ç–∫–∞: *${ selections.attempt }*\n–ò—Ç–æ–≥ —Å–¥–µ–ª–∫–∏: *${ selections.end }* ${ sele.description !== '' ? `\n\n–û–ø–∏—Å–∞–Ω–∏–µ:\n${ sele.description }` : '' } ${ sele.comment !== '' ? `\n\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:\n_${ sele.comment }_` : '' }`;
  const options = { parse_mode: 'Markdown' };

  bot.sendMessage(chatId, `_${'–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª:'}_`, options).then(() => {
    if (screenshots.length > 0) {
      const media = screenshots.map((fileId, index) => {
        const mediaOptions = {
          type: 'photo',
          media: fileId,
          parse_mode: 'Markdown'
        };

        if (index === 0) {
          mediaOptions.caption = message;
        };

        return mediaOptions;
      });

      if (
          end === '–ü–õ–Æ–° üöÄ' ||
          end === '–ü–õ–Æ–° ‚úÖ' ||
          end === '–ü–õ–Æ–° üí•' ||
          end === '–ü–õ–Æ–° ‚ö°Ô∏è' ||
          end === '–ü–õ–Æ–° ‚ù§Ô∏è‚Äçüî•'
        ) {
          plusesGlobal++
          pluses++
        };

      if (end === '–û–¢–ú–ï–ù–ï–ù–û üõ†') {
        setTimeout(() =>
          bot.sendMessage(
            chatId,
            `–¢–µ–±–µ –æ—Ç–º–µ–Ω–∏–ª–∏ —Å–¥–µ–ª–∫—É. –£—Å–ø–æ–∫–æ–π—Å—è –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–π! :)`,
            options
          ), 1000
        );

        cancelles++
      };

      if (end === '–ú–ò–ù–£–° üí¢' && selections3.attempt === '2 –ü–ï–†–ï–ö–†–´–¢–ò–ï') {
        setTimeout(() =>
          bot.sendMessage(
            chatId,
            `–¢—ã –ø–æ–ª—É—á–∏–ª –º–∏–Ω—É—Å –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏. –ü–æ–¥—É–º–∞–π –ø–∞—Ä—É –º–∏–Ω—É—Ç, –≤—Å–ø–æ–º–Ω–∏ 3-–µ –ø—Ä–∞–≤–∏–ª–æ, –ø–æ–¥—É–º–∞–π –Ω–∞–¥ –ø—Ä–∏—á–∏–Ω–æ–π —Ç–∞–∫–æ–≥–æ –∏—Å—Ö–æ–¥–∞ –∏ –∑–∞–∫–æ–Ω—á–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ:\n_${'¬´–Ø –ø–æ–ª—É—á–∏–ª –º–∏–Ω—É—Å –∏–∑-–∑–∞ ...¬ª (–ù–∞–ø—Ä.: —Å–ø–µ—à–∫–∏, –Ω–µ–≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏)'}_`,
            options
          ), 1000
        );
        hasMinus = true
      };
  
      if (end === '–ú–ò–ù–£–° ‚ùå' && selections3.attempt === '2 –ü–ï–†–ï–ö–†–´–¢–ò–ï') {
        setTimeout(() =>
          bot.sendMessage(
            chatId,
            `–¢—ã –ø–æ–ª—É—á–∏–ª –º–∏–Ω—É—Å –∏–∑-–∑–∞ —Ä—ã–Ω–∫–∞. –ï—Å–ª–∏ —Ç—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —É–≤–µ—Ä–µ–Ω, —á—Ç–æ —Ç—ã –Ω–µ –Ω–∞–¥–µ–ª–∞–ª –æ—à–∏–±–æ–∫, —Ç–æ –∑–∞–∫–æ–Ω—á–∏ —ç—Ç–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ:\n_${'¬´–Ø –ø–æ–ª—É—á–∏–ª –º–∏–Ω—É—Å –∏–∑-–∑–∞ ...¬ª (–ù–∞–ø—Ä.: —Å–ø–µ—à–∫–∏, –Ω–µ–≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, —Ä—ã–Ω–∫–∞)'}_`,
            options
          ), 1000
        );
        hasMinus = true
      };

      if (selections3.attempt !== '–û–°–ù–û–í–ê') {
        setTimeout(() => {
          bot.sendMessage(chatId, `*${`–£—à–ª–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –æ—Ç—Ä–∞–±–æ—Ç–∫—É: ${ formattedFulfillingTime }`}*`, options);
        }, 1000)
      };

      const cryptoChannelId = '-1001904496260'; // ID of crypto-trades
      // const channelId = '-1001875103729'; // ID of my BO trades channel
      // bot.sendMediaGroup(channelId, media, options).then(() => console.log('–ò—Ç–æ–≥ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω.')); // Send created post to channel
      bot.sendMediaGroup(chatId, media, options).then(() => {
        // findingTimeIncrement++; // for working branch
        createCounterGlobal++;
        createCounter++;

        console.log('–ò—Ç–æ–≥ —Å–æ–∑–¥–∞–Ω.');
      });
    } else {
      bot.sendMessage(chatId, `*${'–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã.'}*`, options);
      console.log('–°–∫—Ä–∏–Ω—à–æ—Ç—ã –Ω–µ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω—ã.');
    };
  });
};

module.exports = { handleStep4 };